// <auto-generated />
using System;
using EstoqueAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EstoqueAPI.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240830010049_CriandoBancoDeDados")]
    partial class CriandoBancoDeDados
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EstoqueAPI.Domain.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("EstoqueAPI.Domain.Models.MovimentacaoEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataMovimentacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("dataMovimentacao");

                    b.Property<int>("IdProduto")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("VARCHAR")
                        .HasColumnName("observacao");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<string>("TipoMovimentacao")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("tipoMovimentacao");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.ToTable("movimentacao_estoque", (string)null);
                });

            modelBuilder.Entity("EstoqueAPI.Domain.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("VARCHAR")
                        .HasColumnName("descricao");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("nome");

                    b.Property<double>("Preco")
                        .HasColumnType("double precision")
                        .HasColumnName("preco");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("integer")
                        .HasColumnName("quantidadeEstoque");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("EstoqueAPI.Domain.Models.MovimentacaoEstoque", b =>
                {
                    b.HasOne("EstoqueAPI.Domain.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("EstoqueAPI.Domain.Models.Produto", b =>
                {
                    b.HasOne("EstoqueAPI.Domain.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });
#pragma warning restore 612, 618
        }
    }
}
